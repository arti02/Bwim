// This file was auto-generated by ML.NET Model Builder. 

using System;
using System.IO;
using Accord.Audio;
using Accord.Audio.Formats;
using AudioRecognition_ML.Model;

namespace AudioRecognition_ML.ConsoleApp
{
   public class ModelManager
    {
       public static string filepath = Directory.GetCurrentDirectory() + "/Nagrania/test1.wav";
        public static string EvaluateAudio()
        {
			
            double[][] d = prepare((Directory.GetParent(Directory.GetCurrentDirectory()).Parent.Parent.FullName + "/Audio/test1.wav"));
            // double[] readWave = prepare(@"C:\Users\Artem\Desktop\Nagrania\test1.wav");

            // Create single instance of sample data from first line of dataset for model input
            ModelInput sampleData = new ModelInput()
            {
                Col0 = (float)d[1][0],
                Col1 = (float)d[1][1],
                Col2 = (float)d[1][2],
                Col3 = (float)d[1][3],
                Col4 = (float)d[1][4],
                Col5 = (float)d[1][5],
                Col6 = (float)d[1][6],
                Col7 = (float)d[1][7],
                Col8 = (float)d[1][8],
                Col9 = (float)d[1][9],
                Col10 = (float)d[1][10],
                Col11 = (float)d[1][11],
                Col12 = (float)d[1][12],
                Col13 = (float)d[4][0],
                Col14 = (float)d[4][1],
                Col15 = (float)d[4][2],
                Col16 = (float)d[4][3],
                Col17 = (float)d[4][4],
                Col18 = (float)d[4][5],
                Col19 = (float)d[4][6],
                Col20 = (float)d[4][7],
                Col21 = (float)d[4][8],
                Col22 = (float)d[4][9],
                Col23 = (float)d[4][10],
                Col24 = (float)d[4][11],
                Col25 = (float)d[4][12],
                Col26 = (float)d[7][0],
                Col27 = (float)d[7][1],
                Col28 = (float)d[7][2],
                Col29 = (float)d[7][3],
                Col30 = (float)d[7][4],
                Col31 = (float)d[7][5],
                Col32 = (float)d[7][6],
                Col33 = (float)d[7][7],
                Col34 = (float)d[7][8],
                Col35 = (float)d[7][9],
                Col36 = (float)d[7][10],
                Col37 = (float)d[7][11],
                Col38 = (float)d[7][12],
                Col39 = (float)d[9][0],
                Col40 = (float)d[9][1],
                Col41 = (float)d[9][2],
                Col42 = (float)d[9][3],
                Col43 = (float)d[9][4],
                Col44 = (float)d[9][5],
                Col45 = (float)d[9][6],
                Col46 = (float)d[9][7],
                Col47 = (float)d[9][8],
                Col48 = (float)d[9][9],
                Col49 = (float)d[9][10],
                Col50 = (float)d[9][11],
                Col51 = (float)d[9][12],
                Col52 = (float)d[11][0],
                Col53 = (float)d[11][1],
                Col54 = (float)d[11][2],
                Col55 = (float)d[11][3],
                Col56 = (float)d[11][4],
                Col57 = (float)d[11][5],
                Col58 = (float)d[11][6],
                Col59 = (float)d[11][7],
                Col60 = (float)d[11][8],
                Col61 = (float)d[11][9],
                Col62 = (float)d[11][10],
                Col63 = (float)d[11][11],
                Col64 = (float)d[11][12],
                Col65 = (float)d[13][0],
                Col66 = (float)d[13][1],
                Col67 = (float)d[13][2],
                Col68 = (float)d[13][3],
                Col69 = (float)d[13][4],
                Col70 = (float)d[13][5],
                Col71 = (float)d[13][6],
                Col72 = (float)d[13][7],
                Col73 = (float)d[13][8],
                Col74 = (float)d[13][9],
                Col75 = (float)d[13][10],
                Col76 = (float)d[13][11],
                Col77 = (float)d[13][12],

            };


            // Make a single prediction on the sample data and print results
            var predictionResult = ConsumeModel.Predict(sampleData);

            Console.WriteLine("Using model to make single prediction -- Comparing actual Col78 with predicted Col78 from sample data...\n\n");
            Console.WriteLine($"Col0: {sampleData.Col0}");
            Console.WriteLine($"Col1: {sampleData.Col1}");
            Console.WriteLine($"Col2: {sampleData.Col2}");
            Console.WriteLine($"Col3: {sampleData.Col3}");
            Console.WriteLine($"Col4: {sampleData.Col4}");
            Console.WriteLine($"Col5: {sampleData.Col5}");
            Console.WriteLine($"Col6: {sampleData.Col6}");
            Console.WriteLine($"Col7: {sampleData.Col7}");
            Console.WriteLine($"Col8: {sampleData.Col8}");
            Console.WriteLine($"Col9: {sampleData.Col9}");
            Console.WriteLine($"Col10: {sampleData.Col10}");
            Console.WriteLine($"Col11: {sampleData.Col11}");
            Console.WriteLine($"Col12: {sampleData.Col12}");
            Console.WriteLine($"Col13: {sampleData.Col13}");
            Console.WriteLine($"Col14: {sampleData.Col14}");
            Console.WriteLine($"Col15: {sampleData.Col15}");
            Console.WriteLine($"Col16: {sampleData.Col16}");
            Console.WriteLine($"Col17: {sampleData.Col17}");
            Console.WriteLine($"Col18: {sampleData.Col18}");
            Console.WriteLine($"Col19: {sampleData.Col19}");
            Console.WriteLine($"Col20: {sampleData.Col20}");
            Console.WriteLine($"Col21: {sampleData.Col21}");
            Console.WriteLine($"Col22: {sampleData.Col22}");
            Console.WriteLine($"Col23: {sampleData.Col23}");
            Console.WriteLine($"Col24: {sampleData.Col24}");
            Console.WriteLine($"Col25: {sampleData.Col25}");
            Console.WriteLine($"Col26: {sampleData.Col26}");
            Console.WriteLine($"Col27: {sampleData.Col27}");
            Console.WriteLine($"Col28: {sampleData.Col28}");
            Console.WriteLine($"Col29: {sampleData.Col29}");
            Console.WriteLine($"Col30: {sampleData.Col30}");
            Console.WriteLine($"Col31: {sampleData.Col31}");
            Console.WriteLine($"Col32: {sampleData.Col32}");
            Console.WriteLine($"Col33: {sampleData.Col33}");
            Console.WriteLine($"Col34: {sampleData.Col34}");
            Console.WriteLine($"Col35: {sampleData.Col35}");
            Console.WriteLine($"Col36: {sampleData.Col36}");
            Console.WriteLine($"Col37: {sampleData.Col37}");
            Console.WriteLine($"Col38: {sampleData.Col38}");
            Console.WriteLine($"Col39: {sampleData.Col39}");
            Console.WriteLine($"Col40: {sampleData.Col40}");
            Console.WriteLine($"Col41: {sampleData.Col41}");
            Console.WriteLine($"Col42: {sampleData.Col42}");
            Console.WriteLine($"Col43: {sampleData.Col43}");
            Console.WriteLine($"Col44: {sampleData.Col44}");
            Console.WriteLine($"Col45: {sampleData.Col45}");
            Console.WriteLine($"Col46: {sampleData.Col46}");
            Console.WriteLine($"Col47: {sampleData.Col47}");
            Console.WriteLine($"Col48: {sampleData.Col48}");
            Console.WriteLine($"Col49: {sampleData.Col49}");
            Console.WriteLine($"Col50: {sampleData.Col50}");
            Console.WriteLine($"Col51: {sampleData.Col51}");
            Console.WriteLine($"Col52: {sampleData.Col52}");
            Console.WriteLine($"Col53: {sampleData.Col53}");
            Console.WriteLine($"Col54: {sampleData.Col54}");
            Console.WriteLine($"Col55: {sampleData.Col55}");
            Console.WriteLine($"Col56: {sampleData.Col56}");
            Console.WriteLine($"Col57: {sampleData.Col57}");
            Console.WriteLine($"Col58: {sampleData.Col58}");
            Console.WriteLine($"Col59: {sampleData.Col59}");
            Console.WriteLine($"Col60: {sampleData.Col60}");
            Console.WriteLine($"Col61: {sampleData.Col61}");
            Console.WriteLine($"Col62: {sampleData.Col62}");
            Console.WriteLine($"Col63: {sampleData.Col63}");
            Console.WriteLine($"Col64: {sampleData.Col64}");
            Console.WriteLine($"Col65: {sampleData.Col65}");
            Console.WriteLine($"Col66: {sampleData.Col66}");
            Console.WriteLine($"Col67: {sampleData.Col67}");
            Console.WriteLine($"Col68: {sampleData.Col68}");
            Console.WriteLine($"Col69: {sampleData.Col69}");
            Console.WriteLine($"Col70: {sampleData.Col70}");
            Console.WriteLine($"Col71: {sampleData.Col71}");
            Console.WriteLine($"Col72: {sampleData.Col72}");
            Console.WriteLine($"Col73: {sampleData.Col73}");
            Console.WriteLine($"Col74: {sampleData.Col74}");
            Console.WriteLine($"Col75: {sampleData.Col75}");
            Console.WriteLine($"Col76: {sampleData.Col76}");
            Console.WriteLine($"Col77: {sampleData.Col77}");
            Console.WriteLine($"\n\nPredicted Col78 value {predictionResult.Prediction} \nPredicted Col78 scores: [{String.Join(",", predictionResult.Score)}]\n\n");
            Console.WriteLine("=============== End of process, hit any key to finish ===============");
            
            return predictionResult.Prediction;
        }
        public static Double[][] prepare(String wavePath)
        {
            double[][] data;

            WaveDecoder waveDecoder = new WaveDecoder(wavePath);
            Signal signal = waveDecoder.Decode();


            MFCC mFCC = new MFCC(40, 13, 133.333, 6855.4976, 0.97, 160000, 100, 0.100, 512);
            //MFCC mFCC = new MFCC();
            data = mFCC.ProcessSignal(signal);



            return data;
        }
    }
}
